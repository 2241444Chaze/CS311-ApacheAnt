memberSearchIndex = [{"p":"com.team2.solutions.lists","c":"LinkedListSolutions","l":"addTwoNumbers(ListNode, ListNode)","u":"addTwoNumbers(com.team2.solutions.util.ListNode,com.team2.solutions.util.ListNode)"},{"p":"com.team2.solutions.arrays","c":"ArraySolutions","l":"ArraySolutions()","u":"%3Cinit%3E()","k":"3"},{"p":"com.team2.solutions.arrays","c":"ArraySolutions","l":"canJump(int[])"},{"p":"com.team2.solutions.arrays","c":"ArraySolutions","l":"findMedianSortedArrays(int[], int[])","u":"findMedianSortedArrays(int[],int[])"},{"p":"com.team2.solutions.strings","c":"StringSolutions","l":"findSubstring(String, String[])","u":"findSubstring(java.lang.String,java.lang.String[])"},{"p":"com.team2.solutions.math","c":"MathSolutions","l":"isPalindrome(int)"},{"p":"com.team2.solutions.strings","c":"StringSolutions","l":"isPalindrome(String)","u":"isPalindrome(java.lang.String)"},{"p":"com.team2.solutions.math","c":"MathSolutions","l":"isPowerOfFour(int)"},{"p":"com.team2.solutions.strings","c":"StringSolutions","l":"lengthOfLongestSubstring(String)","u":"lengthOfLongestSubstring(java.lang.String)"},{"p":"com.team2.solutions.lists","c":"LinkedListSolutions","l":"LinkedListSolutions()","u":"%3Cinit%3E()","k":"3"},{"p":"com.team2.solutions.util","c":"ListNode","l":"ListNode()","u":"%3Cinit%3E()","k":"3"},{"p":"com.team2.solutions.util","c":"ListNode","l":"ListNode(int)","u":"%3Cinit%3E(int)","k":"3"},{"p":"com.team2.solutions.util","c":"ListNode","l":"ListNode(int, ListNode)","u":"%3Cinit%3E(int,com.team2.solutions.util.ListNode)","k":"3"},{"p":"com.team2.solutions.strings","c":"StringSolutions","l":"longestCommonPrefix(String[])","u":"longestCommonPrefix(java.lang.String[])"},{"p":"com.team2","c":"MainApp","l":"main(String[])","u":"main(java.lang.String[])","k":"6"},{"p":"com.team2","c":"MainApp","l":"MainApp()","u":"%3Cinit%3E()","k":"3"},{"p":"com.team2.solutions.math","c":"MathSolutions","l":"MathSolutions()","u":"%3Cinit%3E()","k":"3"},{"p":"com.team2.solutions.arrays","c":"ArraySolutions","l":"maxArea(int[])"},{"p":"com.team2.solutions.lists","c":"LinkedListSolutions","l":"mergeKLists(ListNode[])","u":"mergeKLists(com.team2.solutions.util.ListNode[])"},{"p":"com.team2.solutions.util","c":"ListNode","l":"next","k":"1"},{"p":"com.team2.solutions.math","c":"MathSolutions","l":"nextBeautifulNumber(int)"},{"p":"com.team2.solutions.arrays","c":"ArraySolutions","l":"numSubmat(int[][])"},{"p":"com.team2.solutions.arrays","c":"ArraySolutions","l":"plusOne(int[])"},{"p":"com.team2.solutions.arrays","c":"ArraySolutions","l":"removeDuplicates(int[])"},{"p":"com.team2.solutions.arrays","c":"ArraySolutions","l":"removeElement(int[], int)","u":"removeElement(int[],int)"},{"p":"com.team2.solutions.strings","c":"StringSolutions","l":"romanToInt(String)","u":"romanToInt(java.lang.String)"},{"p":"com.team2","c":"MainApp","l":"run()"},{"p":"com.team2.solutions.arrays","c":"ArraySolutions","l":"searchRange(int[], int)","u":"searchRange(int[],int)"},{"p":"com.team2.solutions.strings","c":"StringSolutions","l":"StringSolutions()","u":"%3Cinit%3E()","k":"3"},{"p":"com.team2.solutions.arrays","c":"ArraySolutions","l":"twoSum(int[], int)","u":"twoSum(int[],int)"},{"p":"com.team2.solutions.util","c":"ListNode","l":"val","k":"1"}];updateSearchResults();